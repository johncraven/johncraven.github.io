[{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\n![\u0026ldquo;site_example.gif\u0026rdquo;]\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\n!(\u0026ldquo;site_example.gif\u0026rdquo;)\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\ntodo site The core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\ntodo site gif The core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\ntodo site gif The core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n{% comment %} templates/task_new.html {% endcomment %} {% extends \u0026#34;base.html\u0026#34; %} {% block title %}New Task{% endblock title %} {% block main %} \u0026lt;h1\u0026gt;Create task\u0026lt;/h1\u0026gt; \u0026lt;form class=\u0026#34;update-form\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %} {{form.title}} \u0026lt;button id=\u0026#34;update-submit\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Update\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; {% endblock main %} The most complicated part of this example was getting auth set up. I used the basic password authentication built in with django but followed a guide from William Vincent on how to set up a custom user model and profile. From there I just needed to wire up the right routing, views and templates to get the custom user model working properly.\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n{% comment %} templates/task_new.html {% endcomment %} {% extends \u0026#34;base.html\u0026#34; %} {% block title %}New Task{% endblock title %} {% block main %} \u0026lt;h1\u0026gt;Create task\u0026lt;/h1\u0026gt; \u0026lt;form class=\u0026#34;update-form\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %} {{form.title}} \u0026lt;button id=\u0026#34;update-submit\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Update\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; {% endblock main %} The most complicated part of this example was getting auth set up. I used the basic password authentication built in with django but followed a guide from William Vincent on how to set up a custom user model and profile. From there I just needed to wire up the right routing, views and templates to get the custom user model working properly.\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n{% comment %} templates/task_new.html {% endcomment %} {% extends \u0026#34;base.html\u0026#34; %} {% block title %}New Task{% endblock title %} {% block main %} \u0026lt;h1\u0026gt;Create task\u0026lt;/h1\u0026gt; \u0026lt;form class=\u0026#34;update-form\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %} {{form.title}} \u0026lt;button id=\u0026#34;update-submit\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Update\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; {% endblock main %} The most complicated part of this example was getting auth set up. I used the basic password authentication built in with django but followed a guide from William Vincent on how to set up a custom user model and profile. From there I just needed to wire up the right routing, views and templates to get the custom user model working properly.\nOverall it was a good chance to knock some of the rust off and get reacquainted with basic web development.\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n{% comment %} templates/task_new.html {% endcomment %} {% extends \u0026#34;base.html\u0026#34; %} {% block title %}New Task{% endblock title %} {% block main %} \u0026lt;h1\u0026gt;Create task\u0026lt;/h1\u0026gt; \u0026lt;form class=\u0026#34;update-form\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %} {{form.title}} \u0026lt;button id=\u0026#34;update-submit\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Update\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; {% endblock main %} The most complicated part of this example was getting auth set up. I used the basic password authentication built in with django but followed a guide from William Vincent on how to set up a custom user model and profile. From there I just needed to wire up the right routing, views and templates to get the custom user model working properly.\nOverall it was a good chance to knock some of the rust off and get reacquainted with basic web development.\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n{% comment %} templates/task_new.html {% endcomment %} {% extends \u0026#34;base.html\u0026#34; %} {% block title %}New Task{% endblock title %} {% block main %} \u0026lt;h1\u0026gt;Create task\u0026lt;/h1\u0026gt; \u0026lt;form class=\u0026#34;update-form\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %} {{form.title}} \u0026lt;button id=\u0026#34;update-submit\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Update\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; {% endblock main %} The most complicated part of this example was getting auth set up. I used the basic password authentication built in with django but followed a guide from William Vincent on how to set up a custom user model and profile. From there I just needed to wire up the right routing, views and templates to get the custom user model working properly.\nOverall it was a good chance to knock some of the rust off and get reacquainted with basic web development.\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n{% comment %} templates/task_new.html {% endcomment %} {% extends \u0026#34;base.html\u0026#34; %} {% block title %}New Task{% endblock title %} {% block main %} \u0026lt;h1\u0026gt;Create task\u0026lt;/h1\u0026gt; \u0026lt;form class=\u0026#34;update-form\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %} {{form.title}} \u0026lt;button id=\u0026#34;update-submit\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Update\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; {% endblock main %} The most complicated part of this example was getting auth set up. I used the basic password authentication built in with django but followed a guide from William Vincent on how to set up a custom user model and profile. From there I just needed to wire up the right routing, views and templates to get the custom user model working properly.\nOverall it was a good chance to knock some of the rust off and start getting reacquainted with basic web development.\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"},{"content":"I have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\nIf you haven\u0026rsquo;t head of Django, its a python web framework that is pitches as being \u0026ldquo;batteries included\u0026rdquo;. It the core things you might want in a backend framework built in - ORM, auth, routing, template rendering, and a good ecosystem of supporting packages. I thought it would be a good fit to start with Django because I had some previous exposure to the framework, I know a decent amount of python, and Django\u0026rsquo;s feature set seems like a good fit to build out little demo sites and proof of concepts for work.\nThe core of the site really comes down to requests being routed to configuring a \u0026ldquo;model\u0026rdquo; that defines the database tables and relationships for data in the app, \u0026ldquo;views\u0026rdquo; which take those models and business logic to render \u0026ldquo;templates\u0026rdquo;\nThe models file here only has one class, which translates into one database table with a relation to a separate user model. Django comes set up using sqlite but also has support for postgres, mysql and a few other rdbms flavors.\n# tasks/models.py from django.db import models from django.urls import reverse class Task(models.Model): title = models.CharField(max_length=50, null=False) is_complete = models.BooleanField(default=False, null=False) author = models.ForeignKey( \u0026#34;users.CustomUser\u0026#34;, on_delete=models.CASCADE, related_name=\u0026#34;tasks\u0026#34;, default=\u0026#34;\u0026#34; ) def __str__(self): return self.title if len(self.title) \u0026lt; 31 else self.title[:30] + \u0026#34;...\u0026#34; def get_absolute_url(self): return reverse(\u0026#34;task_detail\u0026#34;, kwargs={\u0026#34;pk\u0026#34;: self.pk}) For the views here I kept them simple and used the generic class based views. I had a few issues finding the first fields on some of these but a mix of trial and error with the debug responses from the development server and Classy Class Based Views helped out. I ran into a few issues on setting up some custom logic in forms and needed to set up the debug options in vscode to make sure I was using the right methods.\n# tasks/views.py from django.shortcuts import render from django.views.generic import DetailView, DeleteView, UpdateView, CreateView from django.urls import reverse_lazy from django.contrib.auth.decorators import login_required from .models import Task from .forms import TaskUpdateForm @login_required def homepage_view(request): tasks = Task.objects.filter(author=request.user).order_by(\u0026#34;is_complete\u0026#34;) return render( request, template_name=\u0026#34;home.html\u0026#34;, context={ \u0026#34;tasks\u0026#34;: tasks, }, ) class TaskCreate(CreateView): model = Task fields = [\u0026#34;title\u0026#34;] template_name = \u0026#34;task_new.html\u0026#34; success_url = reverse_lazy(\u0026#34;home\u0026#34;) def form_valid(self, form): form.instance.author = self.request.user return super().form_valid(form) .... Those views couple with some simple html templates to render out forms and links to different parts of the site. Here\u0026rsquo;s an example template\u0026hellip;\n{% comment %} templates/task_new.html {% endcomment %} {% extends \u0026#34;base.html\u0026#34; %} {% block title %}New Task{% endblock title %} {% block main %} \u0026lt;h1\u0026gt;Create task\u0026lt;/h1\u0026gt; \u0026lt;form class=\u0026#34;update-form\u0026#34; action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; {% csrf_token %} {{form.title}} \u0026lt;button id=\u0026#34;update-submit\u0026#34; type=\u0026#34;submit\u0026#34;\u0026gt;Update\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; {% endblock main %} The most complicated part of this example was getting auth set up. I used the basic password authentication built in with django but followed a guide from William Vincent on how to set up a custom user model and profile. From there I just needed to wire up the right routing, views and templates to get the custom user model working properly.\nOverall it was a good chance to knock some of the rust off and start getting reacquainted with basic web development.\n","permalink":"http://localhost:1313/posts/simple-todo-site/","summary":"\u003cp\u003eI have been working in an IT management role for a few years now, primarily focused on data engineering and integrations with analytical instrumentation. Unfortunately, I rarely get the chance to develop hands-on coding skills at work, so I thought it would be fun to take up some side projects and tinker around. To get started I made a simple to-do website with Django. The site is basic CRUD functionality just to help jog my memory on how everything fits together.\u003c/p\u003e","title":"Simple Todo Site"},{"content":"I\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\nRight now I have 2x500GB SSDs in my home desktop with larger storage on a separate NAS, so I set up the dual boot to give both partitions one of the 500GB SSDs. Here\u0026rsquo;s more specs below if you\u0026rsquo;re interested. This is a desktop I built in 2016 so getting close to 10 years old!\nCPU: i5-8600k GPU: GTX 1080 RAM: 16GB Mobo: MSI Z370 sLI Plus OS: Linux Mint 22.1 Desktop Environment: Cinnamon First Impressions Booting is fast. I feel like I got used to fast boots after first switching over to SSDs everywhere but even still swapping to the Mint partition felt like a noticable speedup. Getting the system configured was pretty easy, which I believe is supposed to be one of the benefits of Mint/Ubuntu type distros. I did need to make sure certain drivers got updated and reboot a couple times after updates (particularly my wifi card?), but ultimately the process was straight forward.\nFor personalization I usually go pretty light, I always set my background to a solid color (usually green), dock the home bar against the right edge of the screen, increase the pointer size and remove any desktop icons.\nGetting started with the shell I was familiar enough with the shell to get started navigating around, installing and updating software. I\u0026rsquo;m more familiar with Powershell from working on Windows and doing a bit of python coding, but no major gripes. One thing I have picked up is how to dig around to find relevant programs and get relevant info on how to use them.\nman: man pages are the first thing people point to. I\u0026rsquo;ve found some of these are more instructive than others but they are a good resource. apropos: this one is great, apropos \u0026lt;search term\u0026gt; will do a quick search to give you program names and one line descriptions for any programs that match your keyword search. I guess that\u0026rsquo;s the saying of \u0026ldquo;does one thing and does it well\u0026rdquo; tldr: this is one that I had not heard of before but I absolutely love it. tldr is a community run version of short, example driven versions of man pages. This one really helps cut through the noise and seeing examples first often helps me figure out if I\u0026rsquo;m in the right place or need to look elsewhere llm: Simon willison\u0026rsquo;s llm python package is a cool way to interact with an llm model as a cli program, including a chat mode. I use this with a local model through GPT4All (currently running mistral-7b-instruct-v0). I haven\u0026rsquo;t dove into the \u0026ldquo;vibe coding\u0026rdquo; as much yet but using the chat to probe my understanding of topics has been fun. There is something about not needing to context switch by navigating to different web pages for info that makes the llm chat feel more dynamic. So my workflow looks something like \u0026hellip;\nsearch about ideas on what to do online or with llm. These often come from a few youtubers I follow Take a look at documentation online if I need to see how to install something, or search apt tldr as a first peek at how a cli tool is used, then man pages or --help on commands as needed to get what I need. Bonus: The Reboot Mystery One nagging issue I had with my Mint partition was that when I would go to reboot the system the screen would get half full of noise and the system would freeze. Only a hard power cycle would pull it out.\nSuspending and full power cycles worked fine, it was only reboots that caused an issue for some reason. This was beyond my knowledge so I decided to get some info together and submit a cry for help on the mint forums. I was about to get some info together to post when I saw in the diagnostics my BIOS was from 2017 üòÖ. That seemed like it would be the first thing someone asked me to update so I figure I could go ahead and do that ahead of time. Got the new BIOS from the MSI website, jumped out to the BIOS settings and flashed the new BIOS in. The whole process probably took less than 10m, and voila! Reboot mystery solved. The next reboot I got the pleasant mint login screen without any issues. Maybe next time I won\u0026rsquo;t wait most of a decade\u0026hellip;\n","permalink":"http://localhost:1313/posts/linux-update/","summary":"\u003cp\u003eI\u0026rsquo;ve been tinkering around with Linux Mint at home for a few weeks now and decided to write a quick update on how it has been going so far. I decided to update my home computer to dual boot into Linux Mint and Win11 after getting annoyed with the Microsoft pushing onedrive and the m365 accounts on bootup. I did still keep the windows partition active as a fallback, particularly for software compatiblity if I don\u0026rsquo;t want to fuss with wine.\u003c/p\u003e","title":"Linux Update üêß"},{"content":"A little background I bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with Pianote), but also wanted to dig into some more music production and playing with synths / VSTs.\nGetting the audio routing setup right took me a bit of time and playing around with settings, so I thought it might be fun to share. I wanted to get a few things out of this\u0026hellip;\nPlaying the piano just by itself should work without any hassle I should be able to monitor the piano and listen to videos through the same headset/speakers I should be able to set up virtual instrument plugins for DAWs on my computer, play them with the keyboard, and monitor everything through the same headset/speakers The setup None of this was ultimately too complicated but there were a few tricks to get it working just right. Here\u0026rsquo;s a basic diagram of the physical setup below.\np i a n o b l u e t o o t u o h a h s n e m b b a p o d a s r e d t c o s s i m p t p p e a a u a n d t k d e e a r r l s o n e s p e a k e r s The piano sits at 90¬∞ to my desk, so it was easy enough to run a long USB cable directly into the back of my computer and leave it there. I think it may be more common for people to set this up with a laptop but I like having a permanent setup with my desktop computer.\nOK, so with this setup a few things work out of the box\u0026hellip;\nThe headset and speaker connections are easy enough. In practice I\u0026rsquo;m usually using a headset since I\u0026rsquo;m currently in an apartment, but the onboard speakers are also pretty good. Bluetooth connection on the FP-30x has 2 modes - audio or MIDI. I\u0026rsquo;m almost always connecting with audio to listen to videos or a backing track. Adjusting the volume on the ipad lets me adjust the relative levels to the piano and the piano volume effectively becomes the master Using the piano as a midi controller also works pretty well out of the box, you may need to fiddle a bit with low latency audio drivers. To use the same headset for a DAW or virtual instrument then I just set the audio out channel to the FP30x from the USB connection, thankfully it lets you do both MIDI in and audio out through the same connection\u0026hellip; not sure if that is standard? But this left a few issues to troubleshoot\nWhen using the piano as a midi controller you also get the default piano sound doubled on top of it I missed this setting in the manual but one of the function keys on the FP30-X is built for this. They call it \u0026ldquo;local control\u0026rdquo; but a simple hotkey will disable the onboard sound when playing with a virtual instrument ipad is a little small for sheet music I went luddite mode on this one and bought a printer üòÖ. For loose sheet music I\u0026rsquo;m a bit messy right now but I\u0026rsquo;ll get a system going for that when I need it. I caught a tip from youtube to take some tape and bind loose sheet music like little books which helps keep pieces together. Playing smaller chunks on the iPad is still nice but I like the option to fall back to paper. The default metronome volume is pretty loud on the FP30x Again, there was a trick for this in the manual. Hotkey function on C5 lets you lower the metronome volume. I haven\u0026rsquo;t figured out how to make this persist after turning off the piano though Overall, the setup is working well right now. I play a lot of early mornings or evenings so the headset is nice. Having the setup be fairly permanent also makes it a lot easier to jump in and play a little bit when I find time outside of practice sessions.\n","permalink":"http://localhost:1313/posts/audio-routing/","summary":"\u003ch2 id=\"a-little-background\"\u003eA little background\u003c/h2\u003e\n\u003cp\u003eI bought a digital piano (Roland FP-30x) last year after wanting to get back into paino for a long time. I played a bit of piano when I was young and then played guitar on and off for a few years. I\u0026rsquo;m still playing at a beginner level but getting back into playing as a hobby has been fun. Most of the time I\u0026rsquo;m playing with sheet music or video lessons (I\u0026rsquo;ve been having a good time with \u003ca href=\"https://www.pianote.com/\"\u003ePianote\u003c/a\u003e), but also wanted to dig into some more music production and playing with synths / VSTs.\u003c/p\u003e","title":"My current e-piano audio setup üéπ"}]